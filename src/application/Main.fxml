<?xml version="1.0" encoding="UTF-8"?>

<!-- FXMLファイルには使用するクラスはimportが必要 -->
<?import javafx.collections.*?>
<?import javafx.geometry.*?>
<?import javafx.scene.control.*?>
<?import java.lang.*?>
<?import javafx.scene.layout.*?>
<?import javafx.scene.layout.AnchorPane?>
<?import ctrl.Controller?>

<?import javafx.collections.FXCollections?>
<?import javafx.collections.ObservableList?>

<!-- 一番外側のパーツにコントローラに使用するクラスを指定する -->
<AnchorPane xmlns="http://javafx.com/javafx/8" xmlns:fx="http://javafx.com/fxml/1" fx:controller="ctrl.Controller">
   <!--
       今回はAnchorPaneというパーツを置く入れ物を使用します。
       JavaFXにはほかにもPaneはありますが、AnchorPaneは結構便利です。
       特別な用途がない場合は、AnchorPaneは大活躍します。
   -->
   <children>
      <VBox AnchorPane.bottomAnchor="5.0" AnchorPane.leftAnchor="5.0" AnchorPane.rightAnchor="5.0" AnchorPane.topAnchor="5.0">
         <children>
            <!--
                Paneは入れ子にできます。
                今回は、画面のパーツをある程度決まった間隔に置くために、
                GridPaneを使用しています。
            -->
            <GridPane hgap="3.0" vgap="1.0">
               <columnConstraints>
                  <ColumnConstraints hgrow="SOMETIMES" />
                  <ColumnConstraints hgrow="SOMETIMES" maxWidth="250.0" minWidth="196.0" prefWidth="243.0" />
                  <ColumnConstraints hgrow="SOMETIMES" />
               </columnConstraints>
               <rowConstraints>
                  <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
                  <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
                  <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
                  <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
               </rowConstraints>
               <children>
                  <!-- テキストのLabelは特に拾うイベントもないのでidは指定しません -->
                  <Label text="ドロップダウン：" GridPane.halignment="RIGHT">
                     <GridPane.margin>
                        <Insets />
                     </GridPane.margin>
                  </Label>
                  <Label text="テキストボックス：" GridPane.halignment="RIGHT" GridPane.rowIndex="1" />
                  <!-- FXML内のパーツはfx:id属性で一意に識別できるIDを割り当てる -->
                  <ChoiceBox fx:id="dropDown" prefWidth="150.0" GridPane.columnIndex="1" GridPane.halignment="LEFT">
                     <GridPane.margin>
                        <Insets />
                     </GridPane.margin>
                     <items>
                        <FXCollections fx:factory="observableArrayList">
                           <String fx:value="アイテム1" />
                           <String fx:value="アイテム2" />
                        </FXCollections>
                     </items>
                  </ChoiceBox>
                  <!--
                      クリックなどのイベントを拾って処理したい場合は、
                      onAction属性でイベント時のアクションを行うメソッドを指定します。
                      アクションの処理は、先頭で指定したコントローラーに実装します。
                  -->
                  <Button fx:id="button" mnemonicParsing="false" onAction="#onClick" text="ボタン" GridPane.columnIndex="2" GridPane.halignment="CENTER" GridPane.rowIndex="1" />
                  <TextField fx:id="textBox" GridPane.columnIndex="1" GridPane.rowIndex="1">
                     <GridPane.margin>
                        <Insets />
                     </GridPane.margin>
                  </TextField>
               </children>
            </GridPane>
         </children>
      </VBox>
   </children>
</AnchorPane>